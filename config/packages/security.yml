# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        AppBundle\Entity\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    #providers:
    #    in_memory:
    #        memory: ~

    role_hierarchy:
        ROLE_STUDENT:   ROLE_USER
        ROLE_PROFESOR:    ROLE_USER
        ROLE_ADMIN:       ROLE_USER
        ROLE_COORDINADOR:   ROLE_USER
        ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        db_users:
            entity: { class: AppBundle:User }
        in_memory:
            memory:
                users:
                    student:  { password: 12345678, roles: [ 'ROLE_STUDENT' ] }
                    profesor:  { password: 12345678, roles: [ 'ROLE_PROFESOR' ] }
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
                    superadminm: { password: abc123, roles: [ 'ROLE_SUPERADMIN' ] }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login

            provider: db_users

            logout:
                path:   /logout
                target: /

    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_SUPERADMIN }
        # require ROLE_ADMIN for /admin*
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/*, roles: ROLE_USER }
